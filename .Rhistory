knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(stargazer)
library(ggformula)
library(tidyverse)
library(matsindf)
library(matsbyname)
library(igraph)
data   <- file.path("Data")
pgms <- file.path("Data Management Files")
indepvars <- file.path("IMPLAN Independent Vars")
IOFiles <- file.path("IMPLAN IO Tables")
results <- file.path("FinalResults")
setup <- file.path("IMPLAN Simulation Set-up Files")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(stargazer)
library(ggformula)
library(tidyverse)
library(matsindf)
library(matsbyname)
library(igraph)
data   <- file.path("Data")
pgms <- file.path("Data Management Files")
indepvars <- file.path("IMPLAN Independent Vars")
IOFiles <- file.path("IMPLAN IO Tables")
results <- file.path("FinalResults")
setup <- file.path("IMPLAN Simulation Set-up Files")
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(readr)
library(stargazer)
library(ggformula)
library(tidyverse)
library(matsindf)
library(matsbyname)
library(statnet)
library(igraph)
library(qgraph)
library(expss)
library(sjmisc)
library(sjlabelled)
library(scales)
library(ggthemes)
library(citr)
install.packages("citr")
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(readr)
library(stargazer)
library(ggformula)
library(tidyverse)
library(matsindf)
library(matsbyname)
library(statnet)
library(igraph)
library(qgraph)
library(expss)
library(sjmisc)
library(sjlabelled)
library(scales)
library(ggthemes)
data   <- file.path("Data")
setwd("C:/Users/bhane/Google Drive/Sabbatical Project/KN - Implan Research/ImplanPaper2021")
## Read in the IO matrices
filename="AggIOall2014.csv"
fileNamewithPath <- file.path(data,filename)
IOall <- as_tibble(read_csv(fileNamewithPath)) %>%
rename(s01=s1,s02=s2,s03=s3,
s04=s4,s05=s5,s06=s6,
s07=s7,s08=s8,s09=s9) %>%
mutate_all(~replace(., is.na(.), 0)) %>%
select(-desc)
## Read in the Simulation Results and Create Variables for Analysis
filename="AggResults2014.csv"
fileNamewithPath <- file.path(data,filename)
shock01 <- as_tibble(read_csv(fileNamewithPath)) %>%
mutate(sector=dplyr::recode(sector,`0`="Total",`1`="s01",`20`="s02",`41`="s03",
`52`="s04",`65`="s05",
`395`="s06",`396`="s07",`408`="s08",
`417`="s09",`472`="s10",`520`="s11")) %>%
select(-description) %>%
filter(sector=="Total") %>%
select(-sector)
shock01 <- inner_join(shock01,IO.df) %>%
mutate(county=dplyr::recode(county,`St Clair`="St. Clair", `St Joseph`="St. Joseph"))
library(readr)      # for reading in .csv files
library(haven)      # for reading in Stata .dta files
library(tidyverse)  # data wrangling
library(dplyr)      # for filter and select commands. etc.
library(wooldridge) # datasets in the textbook
library(stats)      # basic statistic commands
library(DataExplorer) # nice commands to learn about a new data set
library(stargazer)  # nice regression output
library(ggformula)  # easy graphing interface for ggplot
library(mosaic)     # accompanies ggformula
library(expss)      # apply_labels() cro()
library(AER)        # data and commands specific to econometrics
library(car)        # for linearhypothesis tests lht(), predict() hccm() heterosced.
library(lmtest)     # post-reg tests coeftest()
library(effects)    # to plot effects of one regressor, holding all others constant
library(visualize)  # to visualize hypothesis test p-values
library(dynlm)      # lm commands for time series data
library(plm)        # lm commands for panel data
options(digits=9)   # limits number of decimals to 4 when printing
knitr::opts_chunk$set(echo = TRUE) # TRUE = commands in r chunks to be echoed in outfile
mydata <- read_dta("../IMPLAN Simulation Results/shock01.dta") %>%
select(year,county,sector,Y,TotIndOut,B_mean,B_sd,swindex,totemp,avghhinc,
pctunder18,pctover65,lfpover16,pctblack,pcthisp,cropacres,
pcttotdrop,pctadddrop,pctinduced,pctinddrop) %>%
filter(sector==0) %>%
filter(B_mean!=0)
mydata$year06 <- NULL
mydata$year06[mydata$year !=2006] = 0
mydata$year06[mydata$year ==2006] = 1
mydata$hi_income <- NULL
mydata$hi_income[mydata$avghhinc <  mean(mydata$avghhinc)] = 0
mydata$hi_income[mydata$avghhinc >= mean(mydata$avghhinc)] = 1
# Give the values of the new categorical variable meaningful labels
mydata$hi_income <- factor(mydata$hi_income,
levels = c(0,1),
labels = c("Below Avg HH Income","Above Avg HH Income"))
as_tibble(mydata)
gf_point(pctinddrop ~ B_mean,data=mydata) %>%
gf_facet_grid(hi_income ~ year) %>%
gf_lm()
model_1 <- lm(pctinddrop ~ B_mean + B_sd + swindex, data=mydata %>% filter(year==2014))
model_2 <- lm(pctinddrop ~ B_mean + swindex + avghhinc, data=mydata %>% filter(year==2014))
stargazer(model_1,model_2,type="text")
model_3 <- lm(pctinddrop ~ B_mean + B_sd + swindex + year06, data=mydata %>% filter(year!=2001))
model_4 <- lm(pctinddrop ~ B_mean + B_sd + swindex + year06 + year06*B_mean, data=mydata %>% filter(year!=2001))
stargazer(model_1,model_3,model_4,type="text")
library(readr)      # for reading in .csv files
library(haven)      # for reading in Stata .dta files
library(tidyverse)  # data wrangling
library(dplyr)      # for filter and select commands. etc.
library(wooldridge) # datasets in the textbook
library(stats)      # basic statistic commands
library(DataExplorer) # nice commands to learn about a new data set
library(stargazer)  # nice regression output
library(ggformula)  # easy graphing interface for ggplot
library(mosaic)     # accompanies ggformula
library(expss)      # apply_labels() cro()
library(AER)        # data and commands specific to econometrics
library(car)        # for linearhypothesis tests lht(), predict() hccm() heterosced.
library(lmtest)     # post-reg tests coeftest()
library(effects)    # to plot effects of one regressor, holding all others constant
library(visualize)  # to visualize hypothesis test p-values
library(dynlm)      # lm commands for time series data
library(plm)        # lm commands for panel data
options(digits=9)   # limits number of decimals to 4 when printing
knitr::opts_chunk$set(echo = TRUE) # TRUE = commands in r chunks to be echoed in outfile
mydata <- read_dta("../IMPLAN Simulation Results/shock01.dta")
View(mydata)
shock01 <- read_dta("../IMPLAN Simulation Results/shock01.dta")
###
### Indirect Impacts (ie. BEA)
###
gf_lm(pctindirect ~ B_sd,data=(shock01 %>%
filter(table=="Output")),
color=~as_label(IndustryType)) %>%
gf_point(pctindirect ~ B_sd,data=(shock01 %>%
filter(table=="Output")),
alpha=.5,
color=~as_label(IndustryType),
size=~GRP,
title = "How Much a Shock Propogates through the County",
subtitle = "as Production Network is More Centralized",
caption = "Source: IMPLAN Michigan County Data, 2014",
xlab = "Degree of Centralization: s.d.(Bonacich Centrality)",
ylab = "% Impact on Other Sectors (Indirect)") %>%
gf_labs(
color="Main Industry",
size="GRP (billions)") %>%
gf_refine(
scale_color_manual(values = c("navy","limegreen"))) %>%
gf_theme(
theme=theme_tufte())
###
### Indirect Impacts (ie. BEA)
###
gf_lm(pctinddrop ~ B_sd,data=(shock01 %>%
filter(table=="Output")),
color=~as_label(IndustryType)) %>%
gf_point(pctinddrop ~ B_sd,data=(shock01 %>%
filter(table=="Output")),
alpha=.5,
color=~as_label(IndustryType),
size=~GRP,
title = "How Much a Shock Propogates through the County",
subtitle = "as Production Network is More Centralized",
caption = "Source: IMPLAN Michigan County Data, 2014",
xlab = "Degree of Centralization: s.d.(Bonacich Centrality)",
ylab = "% Impact on Other Sectors (Indirect)") %>%
gf_labs(
color="Main Industry",
size="GRP (billions)") %>%
gf_refine(
scale_color_manual(values = c("navy","limegreen"))) %>%
gf_theme(
theme=theme_tufte())
knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(readr)
library(stargazer)
library(ggformula)
library(tidyverse)
library(matsindf)
library(matsbyname)
library(statnet)
library(igraph)
library(qgraph)
library(expss)
library(sjmisc)
library(sjlabelled)
library(scales)
library(ggthemes)
data   <- file.path("../Data/AggData")
## Read in the IO matrices
filename="AggIOall2014.csv"
fileNamewithPath <- file.path(data,filename)
IOall <- as_tibble(read_csv(fileNamewithPath)) %>%
rename(s01=s1,s02=s2,s03=s3,
s04=s4,s05=s5,s06=s6,
s07=s7,s08=s8,s09=s9) %>%
mutate_all(~replace(., is.na(.), 0)) %>%
select(-desc)
## Create the IO Metrics as needed.
IO.df <- IOall %>%
mutate(rownames=dplyr::recode(sector,`0`="TotIndOut",
`1`="s01",`2`="s02",`3`="s03",
`4`="s04",`5`="s05",
`6`="s06",`7`="s07",`8`="s08",
`9`="s09",`10`="s10",`11`="s11")) %>%
select(-sector) %>%
gather(key="colnames",value="vals",-county,-rownames,-year,factor_key = TRUE) %>%
mutate(matrix="IO",rowtypes="sector",coltypes="sector") %>%
mutate(matrix=case_when(rownames=="TotIndOut" ~ "g",TRUE ~ "IO")) %>%
group_by(county,year,matrix) %>%
collapse_to_matrices(matnames="matrix",matvals="vals") %>%
spread(key="matrix",value="vals") %>%
mutate(A = matrixproduct_byname(IO,hatinv_byname(g)),
L = invert_byname(Iminus_byname(A)),
Y = matrixproduct_byname(invert_byname(L),transpose_byname(g)),
Bona_cent=rowsums_byname(L),
B_mean=unaryapply_byname(mean,Bona_cent) %>% as.numeric(),
B_sd=unaryapply_byname(sd,Bona_cent) %>% as.numeric())
## Read in the Simulation Results and Create Variables for Analysis
filename="AggResults2014.csv"
fileNamewithPath <- file.path(data,filename)
shock01 <- as_tibble(read_csv(fileNamewithPath)) %>%
mutate(sector=dplyr::recode(sector,`0`="Total",`1`="s01",`20`="s02",`41`="s03",
`52`="s04",`65`="s05",
`395`="s06",`396`="s07",`408`="s08",
`417`="s09",`472`="s10",`520`="s11")) %>%
select(-description) %>%
filter(sector=="Total") %>%
select(-sector)
shock01 <- inner_join(shock01,IO.df) %>%
mutate(county=dplyr::recode(county,`St Clair`="St. Clair", `St Joseph`="St. Joseph"))
filename="IMPLAN Industry Type 2014.csv"
fileNamewithPath <- file.path(data,filename)
vars <-as_tibble(read_csv(fileNamewithPath))
shock01 <- inner_join(shock01,vars)
filename="IMPLANVars2014.csv"
fileNamewithPath <- file.path(data,filename)
vars <-as_tibble(read_csv(fileNamewithPath))
shock01 <- inner_join(shock01,vars)
filename="NonIMPLANVars.csv"
fileNamewithPath <- file.path(data,filename)
vars <-as_tibble(read_csv(fileNamewithPath))
shock01 <- inner_join(shock01,vars)
shock01 <- shock01 %>% mutate(pctindirect = indirect/direct,
pctinduced = induced/direct,
GRP = grp/1000000000)
var_lab(shock01$IndustryType)="Primary Industry"
shock01$IndustryTypebyOutput <- set_labels(
shock01$IndustryTypebyOutput,
labels = c(`M` = "Manufacturing", `S` = "Service")
)
dollar_format(shock01$GRP)
as_tibble(shock01)
as_tibble(shock01)
foreign::write.dta(shock01,"shock01_2014.dta")
library(foreign, lib.loc = "C:/Program Files/R/R-4.1.0/library")
foreign::write.dta(shock01,"shock01_2014.dta")
write.csv(shock01,"shock01_2014.csv")
write.csv(as.df(shock01),"shock01_2014.csv")
write.csv(as_data_frame(shock01),"shock01_2014.csv")
as_tibble(shock01)
no_matrices <- shock01 %>% drop(g, IO, A, L, Y, Bona_cent)
no_matrices <- select(shock01,-c(g, IO, A, L, Y, Bona_cent))
write.dta(no_matrices,"shock01_2014.dta")
